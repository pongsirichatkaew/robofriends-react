{"version":3,"sources":["reportWebVitals.js","components/CounterButton.js","components/Header.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","redux/robots/robots.type.js","container/App.js","redux/robots/robots.action.js","redux/robots/robots.reducer.js","redux/searchField/searchfield.type.js","redux/searchField/searchfield.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CounterButton","updateCount","setState","state","count","console","log","color","this","props","onClick","PureComponent","Header","nextProps","nextState","React","Component","Card","id","name","email","className","alt","src","CardList","robots","cardComponent","map","robot","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","ErrorBoundary","hasError","error","info","FETCH_PRODUCTS_PENDING","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_ERROR","App","useState","setSearchField","dispatch","useDispatch","useSelector","users","useEffect","fetch","res","json","data","payload","catch","filteredRobots","filter","toLowerCase","includes","length","event","target","value","robotInitialState","pending","robotsReducer","action","CHANGE_SEARCH_FIELD","initialState","searchFieldReducer","rootReducer","combineReducers","robotReducer","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a69d189e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { PureComponent } from 'react';\r\n\r\nclass CounterButton extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      count: 0,\r\n    };\r\n  }\r\n\r\n//   shouldComponentUpdate(nextProps, nextState) {\r\n//     if (this.state.count !== nextState.count) {\r\n//       return true;\r\n//     } else {\r\n//       return false;\r\n//     }\r\n//     // console.log('nextProps', nextProps, nextState);\r\n//     // return true;\r\n//   }\r\n\r\n  updateCount = () => {\r\n    // this.setState({ count: this.state.count + 1 });\r\n    this.setState((state) => {\r\n      return { count: state.count + 1 };\r\n    });\r\n  };\r\n  render() {\r\n    console.log('CounterButton render');\r\n    return (\r\n      <button color={this.props.color} onClick={this.updateCount}>\r\n        Count: {this.state.count}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CounterButton;\r\n","import React from 'react';\r\nimport CounterButton from './CounterButton';\r\n// const Header = () => {\r\n//   console.log('Header rendered');\r\n//   return <h1>RoboFrineds</h1>;\r\n// };\r\n\r\nclass Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return true;\r\n  }\r\n  render() {\r\n    console.log('Header Render');\r\n    return (\r\n      <div>\r\n        <h1>RoboFrineds</h1>\r\n        <CounterButton color={'red'} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  console.log('render Card');\r\n  // if (true) {\r\n  //   throw new Error('Nooooooo');\r\n  // }\r\n  const cardComponent = robots.map((robot) => (\r\n    <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email} />\r\n  ));\r\n  return <div>{cardComponent}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n  console.log('Searhbox render');\r\n  return (\r\n    <input\r\n      className='pa3 ba b--green bg-lightest-blue'\r\n      type='search'\r\n      placeholder='search robots'\r\n      onChange={searchChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = ({ children }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: 'scroll',\r\n        border: '5px solid black',\r\n        height: '800px',\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React from 'react';\r\n\r\n// Good for production not works in development\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oooops. That is not good</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export const FETCH_PRODUCTS_PENDING = 'FETCH_PRODUCTS_PENDING';\r\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS';\r\nexport const FETCH_PRODUCTS_ERROR = 'FETCH_PRODUCTS_ERROR';\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Header from '../components/Header';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { requestRobots } from '../redux/robots/robots.action';\r\nfunction App() {\r\n  const [searchField, setSearchField] = useState('');\r\n  const dispatch = useDispatch();\r\n  const robots = useSelector((state) => state.robots.users);\r\n\r\n  useEffect(() => {\r\n    dispatch(requestRobots());\r\n  }, [dispatch]);\r\n\r\n  const onSearchChange = (event) => {\r\n    setSearchField(event.target.value);\r\n  };\r\n\r\n  const filteredRobots = robots.filter((robot) => {\r\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n  });\r\n  return !robots.length ? (\r\n    <h1 className='tc'>Loading</h1>\r\n  ) : (\r\n    <div className='tc'>\r\n      <Header />\r\n      <SearchBox searchChange={onSearchChange} />\r\n      {/*<button onClick={() => setCount(count + 1)}>Click Me!</button>*/}\r\n      <Scroll>\r\n        <ErrorBoundary>\r\n          <CardList robots={filteredRobots} />\r\n        </ErrorBoundary>\r\n      </Scroll>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  FETCH_PRODUCTS_ERROR,\r\n  FETCH_PRODUCTS_SUCCESS,\r\n  FETCH_PRODUCTS_PENDING,\r\n} from './robots.type';\r\nexport const requestRobots = () => (dispatch) => {\r\n  dispatch({ type: FETCH_PRODUCTS_PENDING });\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then((res) => res.json())\r\n    .then((data) => dispatch({ type: FETCH_PRODUCTS_SUCCESS, payload: data }))\r\n    .catch((error) => dispatch({ type: FETCH_PRODUCTS_ERROR, payload: error }));\r\n};\r\n","import {\r\n  FETCH_PRODUCTS_ERROR,\r\n  FETCH_PRODUCTS_SUCCESS,\r\n  FETCH_PRODUCTS_PENDING,\r\n} from './robots.type';\r\nconst robotInitialState = {\r\n  pending: false,\r\n  users: [],\r\n  error: null,\r\n};\r\nconst robotsReducer = (state = robotInitialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS_PENDING:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n      };\r\n    case FETCH_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        users: action.payload,\r\n      };\r\n    case FETCH_PRODUCTS_ERROR:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default robotsReducer;\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n","import { CHANGE_SEARCH_FIELD } from './searchfield.type';\r\nconst initialState = {\r\n  searchField: '',\r\n};\r\n\r\nconst searchFieldReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return { ...state, searchField: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchFieldReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport robotReducer from './robots/robots.reducer';\r\nimport searchFieldReducer from './searchField/searchfield.reducer';\r\nconst rootReducer = combineReducers({\r\n  robots: robotReducer,\r\n  searchField: searchFieldReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './root-reducer';\r\n\r\n// const middlewares = [logger, thunk];\r\nconst middlewares = [ thunk];\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './container/App';\nimport 'tachyons';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}